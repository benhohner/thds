@use 'utils' as *;

// Media Queries ==================================================
@mixin _respond($conditions, $feature, $condition, $scrollbar-compensation: 17px) {
  // A map of all features (min-width, max-width, orientation, resolution, etc.).
  $features: (
    "above": min-width,
    "below": max-width,
    "min-width": min-width,
    "max-width": max-width
  );

  $feature-value: map-get-default($features, $feature, $feature);
  $condition-value: map-get-default($conditions, $condition, $condition);

  // Compensate for scrollbars not being included in screen width in chrome and firefox for windows
  @if is-absolute-length($condition-value) {
    $condition-value: $condition-value + $scrollbar-compensation;
  } @else if is-length($condition-value) {
    @warn "Respond: Scrollbar compensation not possible if not using absolute units (px, etc.).";
  }

  // Prevent media query overlap
  @if $feature-value == 'max-width' and is-length($condition-value) {
    $condition-value: $condition-value - 0.00001;
  }

  @media ($feature-value: $condition-value) {
    @content;
  }
}

$breakpoints: (
    'oxy-xl': 1160px,
    'oxy-l': 992px,
    'oxy-m': 768px,
    'oxy-s': 480px,
    'sm': 320px,
    'md': 672px,
    'lg': 1056px,
    'xlg': 1312px,
    'max': 1584px,
  ) !default;

@mixin respond($feature, $condition, $scrollbar-compensation: 17px) {
  // A map of all conditions (breakpoints, resolutions, or other).
  $conditions: $breakpoints;

  @include _respond($conditions, $feature, $condition, $scrollbar-compensation) {
    @content;
  };  
}

// Shapes ==========================================================
@mixin triangle_equilateral($width, $color: $text-color) {
  // 0.86602540 is pythagorean equilateral ratio b = sqrt(1^2 - 0.5^2)
  $border-height: ($width / 2 / 0.86602540);
  width: 0;
	height: 0;
	
	border-right: $border-height solid transparent; 
	border-left: $border-height solid transparent; 
	border-bottom: $width solid $color; 
}

@mixin shape($shape: "triangle", $size, $color) {
  width: 0;
  height: 0;
  border-top: 0;
  border-left: 0;
  border-right: 0;
  border-bottom: 0;
  transform: none;
  background: transparent;
  border-radius: 0;
  z-index: -1;
  @if ($shape == "triangle") {
    @include triangle_equilateral($size, $color);
  } @else if ($shape == "square") {
    width: $size;
    height: $size;
    background: $color;
  } @else if ($shape == "circle") {
    width: $size;
    height: $size;
    background: $color;
    border-radius: 50%;
  } @else if ($shape == "parallelogram") {
    width: $size * 0.85;
    height: $size;
    transform: skew(-20deg);
    background: $color;
  }
}

// Debugging
@mixin baseline {
  body {
    background-image: linear-gradient(
      180deg,
      #db5353 1.56%,
      #ffffff 1.56%,
      #ffffff 12.5%,
      #f7d6aa 12.5%,
      #f7d6aa 14.06%,
      #fff 14.06%,
      #fff 25%,
      #b0ffbb 25%,
      #b0ffbb 26.56%,
      #fff 26.56%,
      #fff 37.5%,
      #cfcbfa 37.5%,
      #cfcbfa 39.06%,
      #fff 39.06%,
      #fff 50%,
      #db5353 50%,
      #db5353 51.56%,
      #ffffff 51.56%,
      #ffffff 62.5%,
      #f7d6aa 62.5%,
      #f7d6aa 64.06%,
      #fff 64.06%,
      #fff 75%,
      #b0ffbb 75%,
      #b0ffbb 76.56%,
      #fff 76.56%,
      #fff 87.5%,
      #cfcbfa 87.5%,
      #cfcbfa 89.06%,
      #fff 89.06%,
      #fff 100%
    );
    background-size: 64px 64px;
  }
}

@mixin outline_all {
  * {
    outline: 1px solid rgba(50, 0, 0, 0.3);
  }
}