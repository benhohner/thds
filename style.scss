// README 2019-11-07 15:02est
// Syntax
// block-name__element-name_modifier-name_sub-modifier-name
// .button_theme_blast
// .button_disabled
// .button__icon_size_large
// .hero_align_center

// Modifiers
// =========
// Can be:
// - Boolean
//     .button._disabled
// - Key-Value
//     .button_theme_cherry-moon

// Can be used to change:
// - Appearance
//     - .button_size_large
// - Behaviour
//     - .button_animation_bouncy
// - Structure
//     - .button_type_labeled
// - State
//     - .button_disabled

// Dev Styles ================================
body {
  background-image: linear-gradient(
    180deg,
    #db5353 1.56%,
    #ffffff 1.56%,
    #ffffff 12.5%,
    #f7d6aa 12.5%,
    #f7d6aa 14.06%,
    #fff 14.06%,
    #fff 25%,
    #b0ffbb 25%,
    #b0ffbb 26.56%,
    #fff 26.56%,
    #fff 37.5%,
    #cfcbfa 37.5%,
    #cfcbfa 39.06%,
    #fff 39.06%,
    #fff 50%,
    #db5353 50%,
    #db5353 51.56%,
    #ffffff 51.56%,
    #ffffff 62.5%,
    #f7d6aa 62.5%,
    #f7d6aa 64.06%,
    #fff 64.06%,
    #fff 75%,
    #b0ffbb 75%,
    #b0ffbb 76.56%,
    #fff 76.56%,
    #fff 87.5%,
    #cfcbfa 87.5%,
    #cfcbfa 89.06%,
    #fff 89.06%,
    #fff 100%
  );
  background-size: 64px 64px;
}

* {
  outline: 1px solid blue;
}

//=================================================================
// SASS FUNCTIONS =================================================
//=================================================================

// Utilities ======================================================
// Type checking
@function is-number($value) {
  @return type-of($value) == "number";
}

@function is-time($value) {
  @return is-number($value) and index("ms" "s", unit($value)) != null;
}

@function is-duration($value) {
  @return is-time($value);
}

@function is-angle($value) {
  @return is-number($value) and index("deg" "rad" "grad" "turn", unit($value)) != null;
}

@function is-frequency($value) {
  @return is-number($value) and index("Hz" "kHz", unit($value)) != null;
}

@function is-integer($value) {
  @return is-number($value) and round($value) == $value;
}

@function is-relative-length($value) {
  @return is-number($value) and index("em" "ex" "ch" "rem" "vw" "vh" "vmin" "vmax", unit($value)) != null;
}

@function is-absolute-length($value) {
  @return is-number($value) and index("cm" "mm" "in" "px" "pt" "pc", unit($value)) != null;
}

@function is-percentage($value) {
  @return is-number($value) and unit($value) == "%";
}

@function is-length($value) {
  @return is-relative-length($value) or is-absolute-length($value);
}

@function is-resolution($value) {
  @return is-number($value) and index("dpi" "dpcm" "dppx", unit($value)) != null;
}

@function is-position($value) {
  @return is-length($value) or is-percentage($value) or index("top" "right" "bottom" "left" "center", $value) != null;
}

// Strip units
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

// Unit conversion

// Default font size
$base-font-size: 16px;

@function px-to-rem($px, $base-font-size: $base-font-size) {
  @return ($px / $base-font-size) * 1rem;
}

@function rem-to-px($rem, $base-font-size: $base-font-size) {
  @return ($rem / 1rem) * $base-font-size;
}


// Map utilities
@function map-get-default($map, $key, $default: null) {
  $value: map-get($map, $key);
  @if not $value {
    $value: $default;
  }
  @return $value;
}

@mixin map-to-properties($map) {
  @each $name, $value in $map {
    #{$name}: $value;
  }
}


// Media Queries ==================================================
@mixin respond($feature, $condition, $scrollbar-compensation: 17px) {
  // A map of all features (min-width, max-width, orientation, resolution, etc.).
  $features: (
    "above": min-width,
    "below": max-width,
    "min-width": min-width,
    "max-width": max-width
  );

  // A map of all conditions (breakpoints, resolutions, or other).
  $conditions: (
    'layout-width-wide': $layout-width-wide,
    'layout-width-content': $layout-width-content,
    'oxy-xl': 1160px,
    'oxy-l': 992px,
    'oxy-m': 768px,
    'oxy-s': 480px,
    'sm': 320px,
    'md': 672px,
    'lg': 1056px,
    'xlg': 1312px,
    'max': 1584px,
  );

  $feature-value: map-get-default($features, $feature, $feature);
  $condition-value: map-get-default($conditions, $condition, $condition);

  // Compensate for scrollbars not being included in screen width in chrome and firefox for windows
  @if is-absolute-length($condition-value) {
    $condition-value: $condition-value + $scrollbar-compensation;
  } @else if is-length($condition-value) {
    @warn "Respond: Scrollbar compensation not possible if not using absolute units (px, etc.).";
  }

  // Prevent media query overlap
  @if $feature-value == 'max-width' and is-length($condition-value) {
    $condition-value: $condition-value - 0.00001;
  }

  @media ($feature-value: $condition-value) {
    @content;
  }
}

// Typography ======================================================
//  #1 12px
//  #2 14px
//  #3 16px
//  #4 18px
//  #5 20px
//  #6 24px
//  #7 28px
//  #8 32px
//  #9 36px
//  #10 42px
//  #11 48px
//  #12 54px
//  #13 60px
//  #14 68px
//  #15 76px
//  #16 84px
@function get-type-size($step, $ratio: 1) {
  @if $step == 0 {
    @return 12px;
  }
  // Yn = Yn-1 + {INT[(n-2)/4] + 1} * 2
  @return get-type-size($step - 1) + (floor(($step - 2) / 4 * $ratio) + 1) * 2;// WIP FIX TODO
}

@function get-type-size-rem($step) {
  @return px-to-rem(get-type-size($step));
}


@function get-line-height($font-size, $ratio: 1.7, $baseline: 8px) {
  @return round($font-size * $ratio / $baseline) * $baseline / $font-size;
}

@function get-line-height-rem($font-size, $ratio: 1.7, $baseline: 0.5rem) {
  @return get-line-height(rem-to-px($font-size), $ratio, rem-to-px($baseline));
}

/// Include the styles for a given token in any selector in your project. 
/// @param {String} $token-name - The name of the token to get the styles for
@mixin type-style($token-name) {
  @if not map-has-key($tokens, $token-name) {
    @error 'Unable to find a token with the name: `#{$token-name}`';
  }

  $token: map-get($tokens, $token-name);

  // Include the initial styles for the given token
  @include map-to-properties(map-remove($token, breakpoints));

  @if map-has-key($token, breakpoints) {
    // For each breakpoint defined in the type token, apply the
    // properties for that given breakpoint
    @each $name, $values in map-get($token, breakpoints) {
      @include respond(max-width, $name, 0) {
        @include map-to-properties($values);
      }
    }
  }
}


/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans
/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif
$font-families: (
  'sans': unquote("'Poppins', Frutiger, 'Frutiger Linotype', Univers, Calibri, 'Gill Sans', Myriad, 'DejaVu Sans Condensed', 'Liberation Sans', 'Nimbus Sans L', Tahoma, 'Helvetica Neue', Helvetica, sans-serif"),
  'serif': unquote("'Rubik', Frutiger, 'Frutiger Linotype', Univers, Calibri, 'Gill Sans', Myriad, 'DejaVu Sans Condensed', 'Liberation Sans', 'Nimbus Sans L', Tahoma, 'Helvetica Neue', Helvetica, sans-serif"),
);

/// Get the font-family for an IBM Plex font
/// @param {String} $name
@function font-family($name) {
  @return map-get($font-families, $name);
}


/// Suggested font weights to be used in product
$font-weights: (
  'thin': 100,
  'extra-light': 200,
  'light': 300,
  'regular': 400,
  'medium': 500,
  'semibold': 600,
  'bold': 700,
  'extra-bold': 800,
  'black': 900
);

/// Retrieve the font-weight value for a given name
/// @param {String} $weight
@function font-weight($weight) {
  @return map-get($font-weights, $weight);
}



//=================================================================
// VARIABLES ======================================================
//=================================================================

// Colours ========================================================
$colors: (
  'primary': #1c2440, // Dark Blue
  'secondary': #2c676a, // Teal
  'tertiary': #399455, // Wild Forest Green
  'accent-1': #2c416e, // Resolution Blue
  'accent-2': #3a639c, // San Marino Blue
  'accent-3': #4489c9, // Celestial Blue
  'accent-4': #76be43, // Business Centre Green
  'highlight-r': #ff5f5a, // Highlight Red
  'highlight-o': #f4ac62, // Highlight Orange
  'highlight-y': #f0e069, // Highlight Yellow
  'highlight-g': #a5eb72, // Highlight Green
  'highlight-b': #7ebde1, // Highlight Blue
  'highlight-v': #a67fdb, // Highlight Violet
  'ui-1': #020518, // Bluish-black
  'ui-2': #d6d6d9, // Slate Grey
  'ui-3': #f3f2f2, // Off-white
  'ui-4': #fff, // White
);

/// Retrieve the color value for a given color name
/// @param {String} $color
@function color($color) {
  @return map-get($colors, $color);
}

// Spacing ========================================================
$layout-width-wide: 1040px;
$layout-width-content: 870px;
$layout-height-header: 74px;

// Spacing Scales =================================================
$line-height: get-line-height(get-type-size(4));
$spacing-base-size: $line-height * get-type-size(4);

$spacing-component-3xl: $spacing-base-size * 3; // 8.2520rem
$spacing-component-2xl: $spacing-base-size * 2.5; // 6.8766rem
$spacing-component-xl: $spacing-base-size * 2; // 5.5013rem
$spacing-component-l: $spacing-base-size * 1.5; // 4.1260rem
$spacing-component-m: $spacing-base-size; // 2.7507rem
$spacing-component-s: $spacing-base-size * 0.75; // 2.0630rem
$spacing-component-xs: $spacing-base-size * 0.5; // 1.3753rem
$spacing-component-2xs: $spacing-base-size * 0.25; // 0.6877rem
$spacing-component-3xs: $spacing-base-size * 0.125; // 0.3438rem

$spacing-layout-3xl: $spacing-base-size * 13; // 35.7586rem
$spacing-layout-2xl: $spacing-base-size * 8; // 22.0053rem
$spacing-layout-xl: $spacing-base-size * 5; // 13.7533rem
$spacing-layout-l: $spacing-base-size * 4; // 11.0026rem
$spacing-layout-m: $spacing-base-size * 3; // 8.2520rem
$spacing-layout-s: $spacing-base-size * 2; // 5.5013rem
$spacing-layout-xs: $spacing-base-size * 1; // 2.7507rem
$spacing-layout-2xs: $spacing-base-size / 2; // 1.3753rem

// Theming =========================================================
$display-color: color(primary);
$display-font-family: "Poppins", Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT",
  "Myriad Pro", Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue",
  Helvetica, Arial, sans-serif;
$display-weight: 800;

$text-color: color(primary);
$text-font-family: "Rubik", Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT", "Myriad Pro",
  Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue", Helvetica,
  Arial, sans-serif;
$text-weight: 400;


// Typography Generation ============================================
/// Other options include:
/// Breakpoints
/// breakpoints: (
///   max: (
///     font-size: get-type-size-rem(23),
///     line-height: 1.05,
///     letter-spacing: -0.96px,
///   ),
///   xlg: (
///     font-size: get-type-size-rem(20),
///     line-height: 1.07,
///     letter-spacing: -0.64px,
///   ),
///   lg: (
///     font-size: get-type-size-rem(17),
///     line-height: 1.11,
///     letter-spacing: -0.64px,
///   ),
///   md: (
///     font-size: get-type-size-rem(14),
///     line-height: 1.15,
///     letter-spacing: 0,
///   ),
///   sm: (
///     font-size: get-type-size-rem(12),
///     line-height: 1.2,
///   )
/// ),
///
/// Creating aliases
/// $productive-heading-01: $heading-01 !default;
/// Subclassing
/// If both maps have the same keys, the second map’s values are used in the
/// map that gets returned.
/// $expressive-heading-01: map-merge(
///   $heading-01,
///   (
///     line-height: px-to-rem(20),
///   )
/// ) !default;


// Font Scales ====================================================
$font-scale-5xl: get-type-size(16); // type-display-2xl
$font-scale-4xl: get-type-size(14); // type-display-xl
$font-scale-3xl: get-type-size(12); // type-display-l
$font-scale-2xl: get-type-size(8); // type-display-m
$font-scale-xl: get-type-size(7); // type-display-s, type-body-xl
$font-scale-l: get-type-size(6); // type-body-l, type-heading
$font-scale-m: get-type-size(4); // type-body, type-subheading
$font-scale-s: get-type-size(2); // type-body-s


$-type-base-display: (
    color: $display-color,
    font-family: $display-font-family,
    font-weight: $display-weight,
);

$type-display-2xl: map-merge($-type-base-display, (
  font-weight: 700,
  font-size: get-type-size(16),
  line-height: get-line-height(get-type-size(16), 1.15),
  margin-top: $spacing-layout-m,
  margin-bottom: $spacing-layout-s,
  letter-spacing: -1px,
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(16, 0.5),
      line-height: get-line-height(get-type-size(16, 0.5), 1.15)
    ),
  ),
));

$type-display-xl: map-merge($-type-base-display, (
  font-size: get-type-size(14),
  line-height: get-line-height(get-type-size(14), 1.2),
  margin-top: $spacing-layout-s,
  margin-bottom: $spacing-layout-xs,
  letter-spacing: -1px,
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(14, 0.5),
      line-height: get-line-height(get-type-size(14, 0.5), 1.15)
    ),
  ),
));

$type-display-l: map-merge($-type-base-display, (
  font-size: get-type-size(12),
  line-height: get-line-height(get-type-size(12), 1.2),
  margin-top: $spacing-layout-xs,
  margin-bottom: $spacing-layout-xs,
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(12, 0.5),
      line-height: get-line-height(get-type-size(12, 0.5), 1.15)
    ),
  ),
));

$type-display-m: map-merge($-type-base-display, (
  font-size: get-type-size(8),
  line-height: get-line-height(get-type-size(8), 1.5),
  margin-top: $spacing-layout-xs,
  margin-bottom: $spacing-layout-xs,
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(8, 0.5),
      line-height: get-line-height(get-type-size(8, 0.5), 1.15)
    ),
  ),
));

$type-display-s: map-merge($-type-base-display, (
  font-size: get-type-size(7),
  line-height: get-line-height(get-type-size(7)),
  margin-top: $spacing-layout-xs,
  margin-bottom: $spacing-layout-xs,
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(7, 0.5),
      line-height: get-line-height(get-type-size(7, 0.5), 1.15)
    ),
  ),
));

$type-heading: (
  color: color(tertiary),
  font-family: $display-font-family,
  font-weight: 700,
  font-size: get-type-size(6),
  line-height: get-line-height(get-type-size(6), 1.4),
  text-transform: uppercase,
  letter-spacing: 0.4px,
  margin-top: 0,
  margin-bottom: 0,
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(6, 0.5),
      line-height: get-line-height(get-type-size(6, 0.5), 1.15)
    ),
  ),
);

$type-subheading: (
  color: color(tertiary),
  font-family: $display-font-family,
  font-weight: 700,
  font-size: get-type-size(4),
  line-height: get-line-height(get-type-size(4), 1.6),
  margin-top: $spacing-layout-xs,
  margin-bottom: 0,
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(4, 0.5),
      line-height: get-line-height(get-type-size(4, 0.5), 1.15)
    ),
  ),
);


$-type-base-body: (
  color: $text-color,
  font-family: $text-font-family,
  font-weight: $text-weight,
);

$type-body-xl: map-merge($-type-base-body, (
  font-size: get-type-size(7),
  line-height: get-line-height(get-type-size(7)),
  margin-top: $spacing-layout-xs,
  margin-bottom: $spacing-layout-xs,
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(7, 0.5),
      line-height: get-line-height(get-type-size(7, 0.5), 1.3)
    ),
  ),
));


$type-body-l: map-merge($-type-base-body, (
  font-size: get-type-size(6),
  line-height: get-line-height(get-type-size(6)),
  margin-top: $spacing-layout-xs,
  margin-bottom: $spacing-layout-xs,
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(6, 0.5),
      line-height: get-line-height(get-type-size(6, 0.5), 1.35)
    ),
  ),
));

$type-body: map-merge($-type-base-body, (
  font-size: get-type-size(4),
  line-height: get-line-height(get-type-size(4)),
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(4, 0.5),
      line-height: get-line-height(get-type-size(4, 0.5), 1.35)
    ),
  ),
));

$type-body-s: map-merge($-type-base-body, (
  font-size: get-type-size(2),
  line-height: get-line-height(get-type-size(2)),
  margin-top: $spacing-layout-xs,
  margin-bottom: $spacing-layout-xs,
  breakpoints: (
    oxy-s: (
      font-size: get-type-size(2, 0.5),
      line-height: get-line-height(get-type-size(2, 0.5), 1.5)
    ),
  ),
));


$tokens: (
  -type-base-display: $-type-base-display,
  -type-base-body: $-type-base-body, 
  type-display-2xl: $type-display-2xl,
  type-display-xl: $type-display-xl,
  type-display-l: $type-display-l,
  type-display-m: $type-display-m,
  type-display-s: $type-display-s,
  type-heading: $type-heading,
  type-subheading: $type-subheading,
  type-body-xl: $type-body-xl,
  type-body-l: $type-body-l,
  type-body: $type-body,
  type-body-s: $type-body-s,
);


//=================================================================
// CSS ============================================================
//=================================================================

/* Reset ==================================== */
html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Disable auto-enlargement of small text in Safari */
  text-size-adjust: 100%;
  /* Enable kerning and optional ligatures */
  text-rendering: optimizeLegibility;
}

/**
 * Form elements render using OS defaults,
 * so font-family inheritance must be specifically declared
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol {
  line-height: $line-height;
  margin: 0;
  padding: 0;
}

ul,
ol {
  list-style-position: inside;
}

a {
  color: inherit;
}

/* Oxygen Builder Overrides ============================== */
.ct-section > .ct-section-inner-wrap,
body .ct-div-block {
  /* Make vertical margins collapse */
  display: block;
}

@include respond(below, oxy-xl, 0) {
  #main > .ct-section-inner-wrap {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}

/* Override oxygen.css .ct-new-columns > .ct-div-block */
.ct-new-columns > .ct-div-block {
  padding: 0 $spacing-layout-2xs 0 $spacing-layout-2xs;
}

.ct-new-columns > .ct-div-block:first-of-type {
  padding-left: 0;
}

.ct-new-columns > .ct-div-block:last-of-type {
  padding-right: 0;
}

@include respond(below, oxy-m, 0) {
  /* compensate for oxygen off-by-one error */
  .ct-new-columns > .ct-div-block {
    padding: 0;
  }
}

/* Oxygen Helpers =========================== */
.thds-helper_section_width_full > .ct-section-inner-wrap {
  max-width: 100%;
}

/* Helpers ================================== */
.thds-helper_list_reset,
.thds-helper_list_reset ul {
  list-style-type: none;
}

.thds-helper_list_reset_inline > li,
.thds-helper_list_reset_inline ul > li {
  list-style-type: none;
  display: inline;
}

.thds-fix-lining-nums {
  font-size: 1.333em;
}

/* Typography ================================ */
html {
  font-size: $base-font-size;
}

@each $selector-name, $_ in $tokens {
  @if slice($selector-name, 1, 1) != '-' {
    .#{$selector-name} {
      @include type-style($selector-name);
    }
  }
}

body {
  @include type-style(type-body);
}


.type-body p,
.type-body ul,
.type-body ol,
p.type-body,
ul.type-body,
ol.type-body {
  @include type-style(-type-base-body);
  padding: 0;
  margin-top: 0;
  margin-bottom: $spacing-layout-xs;
}

/* Shadow Boxes */
@mixin box-raised {
  box-shadow: 0px 3px 17px rgba(50, 50, 50, 0.3);
}

/* Component
-- Container ------------------------------------------------------------------
A container to wrap all elements. Note: not a semantic "section" use a div for that.

structure:
    div.thds-container

modifiers:
    .thds-container_width_wide
    A $layout-width-wide wide container. Combinable with all margin modifiers

    structure:
        div.thds-container.thds-container_width_wide

    .thds-container_width_full
    A 100% wide container. Combinable with all margin modifiers.

    structure:
        div.thds-container.thds-container_width_full

    .thds-container_margin_none
    A container with no top or bottom margins. Combinable with all other
    container modifiers.

    structure:
        div.thds-container.thds-container_margin_none

*/

.thds-container {
  max-width: $layout-width-content;
  margin-top: $spacing-layout-l;
  margin-bottom: $spacing-layout-s;
  margin-left: auto;
  margin-right: auto;

  @include respond(below, $layout-width-content + (2 * $spacing-layout-xs)) {
    /* Fix scrollbar being included in media query calc */
    margin-left: $spacing-layout-xs;
    margin-right: $spacing-layout-xs;
    padding-left: 0;
    padding-right: 0;
  }
}


.ct-inner-content > .thds-container:first-child {
  /* prevent first container from having top padding */
  margin-top: 0;
}

.thds-container_width_wide {
  max-width: $layout-width-wide;

  @include respond(below, $layout-width-wide + (2 * $spacing-layout-xs)) {
    margin-left: $spacing-layout-xs;
    margin-right: $spacing-layout-xs;
    padding-left: 0;
    padding-right: 0;
  }
}

.thds-container_width_full {
  max-width: 100%;
  margin-left: 0;
  margin-right: 0;
}

.thds-container_margin_none {
  margin-top: 0;
  margin-bottom: 0;
}

/* Component
-- Link ----------------------------------------------------------------------

structure:
    a.thds-link
*/
.thds-link {
  color: color(accent-2);
  text-decoration: underline;
}

.thds-link:hover {
  text-decoration: none;
}

/* Component
-- Image ----------------------------------------------------------------------

structure:
    img.thds-image
*/
.thds-image {
  max-width: 100%;
  display: block;
  margin: 0 auto;
}

/* Component
-- List -----------------------------------------------------------------------

structure:
    ul.thds-list
    li.thds-list__item
    [...]

modifiers:
    .thds-list_with-bullets
    Add bullets.

    .thds-list_display_inline
    An inline list using flexbox to eliminate weird spacing issues
    with display: inline

    structure:
        ul.thds-list.thds-list_display_inline
        li.thds-list__item
        [...]

*/
.thds-list {
  @include type-style(type-body);
  list-style-type: none;
}

.thds-list_with-bullets {
  list-style-type: square;
}

.thds-list_display_inline {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  flex-wrap: wrap;
}

/* Component
-- Typography -----------------------------------------------------------------
A basic container with examples of all possible typographic styles

structure:
    div.thds-typography.thds-container
    [...]
*/

/* Component
-- Embedded SVG ---------------------------------------------------------------

structure:
    codeblock.thds-embedded-svg
    svg.thds-embedded-svg__image

modifiers:
    .thds-embedded-svg_icon_m  2x line height
*/
.thds-embedded-svg__image {
  display: block;
}

.thds-embedded-svg_icon_m .thds-embedded-svg__image {
  height: $spacing-component-xl;
}

/* Component
-- Text Block -----------------------------------------------------------------
Basic building block for most body text.

structure:
    div.thds-text-block
    h_.thds-text-block__title.type-subheading
    text.type-body.thds-text-block__description

modifiers:
    .thds-text-block_bulleted

*/
.thds-text-block {
  margin-bottom: $spacing-component-m;
}

.thds-text-block__title {
  @include type-style(type-subheading);
}

.thds-text-block__description {
  @include type-style(type-body);
}

.thds-text-block_bulleted {
  $bullet-width: $spacing-component-xs;
  $bullet-dimension-ratio: 0.83360927;
  $bullet-height: $bullet-width * $bullet-dimension-ratio;

  padding-left: $spacing-component-xl - $bullet-width;

  .thds-text-block__title {
    position: relative;
  }

  .thds-text-block__title:before {
    content: ">";
    position: absolute;
    top: ($spacing-component-l - $bullet-height) / 2;
    left: 0 - $bullet-width - $spacing-component-s;
    line-height: 0;
    width: $bullet-width;
  }
}

.thds-text-block_large .thds-text-block__title {
  @include type-style(type-display-m);
}

.thds-text-block_large .thds-text-block__description {
  @include type-style(type-body-l);
}

/* Component
-- Button ---------------------------------------------------------------------

structure:
    a.thds-button.type-heading
*/
.thds-button {
  @include type-style(type-heading);
  display: inline-block;
  margin: $spacing-component-m 0;
  border: 2px solid color(ui-1);
  text-decoration: none;
  text-align: center;
  padding: ($spacing-component-xs - 4px) ($spacing-component-m + $spacing-component-2xs) $spacing-component-xs;
  cursor: pointer;
}

.thds-button:hover {
  border-color: color(tertiary);
  color: color(primary);
}

.thds-button_disabled {
  color: color(ui-3);
  border-color: color(ui-3);
  cursor: not-allowed;
}

/* Component
-- Statistic ------------------------------------------------------------------
To display numbers, stats, or metrics prominently.

structure:
    rich-text.thds-statistic
    span.thds-statistic__number
    span.thds-statistic__unit
    span.thds-statistic__description.type-heading

*/
.thds-statistic__number {
  @include type-style(-type-base-body);
  font-size: $font-scale-3xl;
  line-height: get-line-height($font-scale-3xl);
}

.thds-statistic__unit {
  font-size: $font-scale-l;
  font-weight: 500;
}

.thds-statistic__description {
  @include type-style(type-heading);
  display: block;
  margin-top: 0;
}

/* Component
-- Portfolio Service Overview -------------------------------------------------
Convenience component comprised of only utility classes. Used to introduce each
section of a portfolio item. Could be used for other things.

structure:
    div.thds-portfolio-service-overview
    h2.thds-portfolio-service-overview__service.type-heading
    text.thds-portfolio-service-overview__tagline.type-display-xl
    rich-text.thds-portfolio-service-overview__explanation.type-body
*/

.thds-portfolio-service-overview__service {
  @include type-style(type-heading);
}

.thds-portfolio-service-overview__tagline {
  @include type-style(type-display-l);
}

.thds-portfolio-service-overview__explanation {
  @include type-style(type-body-l);
}

/* Component
-- Blockquote -----------------------------------------------------------------

structure:
    rich-text.thds-blockquote
    blockquote.thds-blockquote__quote
        span.thds-blockquote__attribution

*/
.thds-blockquote__quote {
  @include type-style(type-body-xl);
  margin: 0;
  text-align: center;
  font-weight: 500;
}

.thds-blockquote__attribution {
  @include type-style(type-subheading);
  display: block;
  text-align: center;
  font-weight: 400;
}

/* Complex Component
== Icon Block ==========================================================
Building block for text with an inline SVG icon (not added via css,
meaning the icon has semantic meaning, not just a bullet point.)

structure:
    div.thds-icon-block
    codeblock.thds-embedded-svg.thds-icon-block__icon-wrapper
        svg.thds-embedded-svg__image.thds-icon-block__icon[.type-subheading,.type-display-l]
    div.thds-text-block.thds-icon-block__thds-text-block
        [...]

modifiers:
    .thds-icon-block_icon_position_left
    Position the icon to the left of the rest of the element with a margin.

*/

.thds-icon-block__icon {
  margin-bottom: 2 * $spacing-component-m - 48px; /* 48px is height of icon */
}

.thds-icon-block__thds-text-block .thds-text-block__title {
  /* mix with thds-text-block */
  margin-top: 0;
  margin-bottom: 0;
}

.thds-icon-block_icon_position_left {
  position: relative;
}

.thds-icon-block_icon_position_left .thds-icon-block__icon-wrapper {
  position: absolute;
  top: $spacing-component-m * 2 - 48px;
}

.thds-icon-block_icon_position_left .thds-text-block {
  padding-left: $spacing-component-2xl * 2 - 48px;
}

/* Complex Component
== Item Overview ============================================================
Used for introducing complex items. Used on portfolio pages to introduce
the piece.

structure:
    div.thds-item-overview
        columns.thds-item-overview__intro-row
            div.thds-item-overview__intro-wrapper
                rich-text.thds-item-overview__intro-rich-text.type-body
            div.thds-item-overview__aside-wrapper
        div.thds-item-overview__subject-image-wrapper
                    img.thds-image.thds-item-overview__subject-image
                h2.thds-item-overview__list-heading.type-heading
                rich-text.thds-item-overview__list-rich-text.type-body
                    ul.thds-list.thds-item-overview__list
        columns.thds-item-overview__statistics-row
            div.thds-item-overview__statistic-wrapper
                rich-text.thds-statistic.thds-item-overview__statistic-rich-text
                    [...]
            div.thds-item-overview__statistic-wrapper
                rich-text.thds-statistic.thds-item-overview__statistic-rich-text
                    [...]
            div.thds-item-overview__statistic-wrapper
                rich-text.thds-statistic.thds-item-overview__statistic-rich-text
                    [...]

*/
.thds-item-overview__subject-image-wrapper {
  min-height: $spacing-component-3xl;
}

.thds-image.thds-item-overview__subject-image {
  text-align: left;
  margin: 0;
  margin-bottom: $spacing-layout-xs;
}

.thds-item-overview__statistic-wrapper {
  width: 33.33%;
}

@include respond(below, oxy-m) {
  .thds-item-overview__aside-wrapper {
    margin-top: $spacing-layout-xs;
  }

  .thds-item-overview__aside-wrapper,
  .thds-item-overview__statistic-rich-text {
    text-align: center;
  }

  .thds-item-overview__statistic-wrapper {
    margin: $spacing-layout-xs auto;
    width: 100%;
  }

  .thds-item-overview__statistic-wrapper:last-of-type {
    margin-bottom: 0;
  }

  .thds-image.thds-item-overview__subject-image {
    text-align: center;
    margin-left: auto;
    margin-right: auto;
  }
}

/* Complex Component
== Hero =======================================================================

vars:
    $hero-height: height of the hero section.
    $hero-height_mobile: height of hero when device width below breakpoint M.

structure:
    div.thds-hero
    img.thds-hero__image
    div.thds-hero__content
        //content goes here

modifiers:
    .thds-hero_content_bottom
    .thds-hero_inverted
*/
$hero-height: 79vh;
$hero-height_mobile: 71vh;

.thds-hero {
  height: $hero-height;

  display: flex !important;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
}

.thds-hero__image {
  width: 100%;
  height: inherit;
  object-fit: cover;
  display: block;
  margin: 0 auto;
}

.thds-hero__content {
  position: absolute;
  left: 0;
  right: 0;
  margin: 0 auto;
  z-index: 1;
  max-width: $layout-width-content;
  text-align: center;

  color: color(ui-4);
}

.thds-hero_inverted .thds-hero__content {
  color: color(ui-1);
}

.thds-hero__content > :first-child {
  /* prevent first element from having margin */
  margin-top: 0;
}

.thds-hero__content > :last-child {
  /* prevent last element from having bottom margin */
  margin-bottom: 0;
}

@include respond(below, $layout-width-content + (2 * $spacing-layout-xs)) {
  /* NOTE: must recalculate if page width changes from 1160px */
  .thds-hero__content {
    margin-left: $spacing-layout-xs;
    margin-right: $spacing-layout-xs;
    padding-bottom: $spacing-layout-xs;
    padding-top: $spacing-layout-xs;
  }
}

@include respond(below, oxy-m, 0) {
  /* compensate for oxygen off-by-one error */
  .thds-hero {
    height: $hero-height_mobile;
  }
}

.thds-hero_content_bottom {
  justify-content: flex-end;
}

.thds-hero_content_bottom .thds-hero__content {
  text-align: left;
  padding-bottom: $spacing-layout-l;
}

/* Complex Component
== CTA ========================================================================

structure:
    div.thds-cta
    h_.thds-cta__message
    a.thds-button.thds-cta__button
*/
.thds-cta {
  @include box-raised;
  max-width: 80%;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  padding-left: $spacing-component-l;
  padding-right: $spacing-component-l;
  overflow: hidden; /* prevent margin collapse */
}

@include respond(below, oxy-m, 0) {
  .thds-cta {
    max-width: 100%;
  }
}

.thds-cta__message {
  @include type-style(type-body-l);
}

/* Complex Component TODO
== Section Header =============================================================

structure:
    section.thds-section.thds-section-header
    h2.thds-section-header__title.type-heading
    p.thds-section-header__tagline.type-display-2xl
    img.thds-section-header__image

*/
.thds-section-header {
  display: block;
  position: relative;
}

.thds-section-header__wrapper {
  overflow: hidden;
  margin-right: 0;
}

.thds-section-header__title {
  @include type-style(type-heading);
}

.thds-section-header__tagline {
  @include type-style(type-display-xl);
  margin-top: $spacing-component-2xl;
  margin-bottom: 0;
}

.thds-section-header__image {
  position: absolute;
  top: 0;
  left: $spacing-layout-2xl;
  z-index: -1;
  height: 198px;
  /*border-bottom: 12px solid $brand-3;*/
  object-fit: cover;
  object-position: left;
}

/* Complex Component TODO
== Item Breakdown =============================================================

structure:
    columns.thds-item-breakdown
    div.thds-item-breakdown__title-wrapper
        h3.thds-item-breakdown__title
    div.thds-item-breakdown__sub-item-wrapper
        ul.thds-item-breakdown__sub-items.thds-list
        li.thds-item-breakdown__sub-item.thds-list__item.type-body
    div.thds-item-breakdown__description-wrapper
        text-block.thds-item-breakdown__description
*/
.thds-item-breakdown {
  margin-bottom: $spacing-layout-xs;
}

.thds-item-breakdown:last-of-type {
  margin-bottom: 0;
}

.thds-item-breakdown__title {
  @include type-style(type-display-l);
  /* optically align to top of section */
  margin-top: $spacing-component-xs * -1;
}

.thds-item-breakdown__sub-item {
  position: relative;
  padding-left: 28px;
}

.thds-item-breakdown__sub-item:before {
  /* TODO extract to element */
  content: url('/wp-content/uploads/2h/img/marker-check.svg');
  position: absolute;
  top: 1px;
  left: 0;
  width: 16px;
}

@include respond(below, oxy-l, 0) {
  /* compensate for oxygen off-by-one error,  */
  .thds-item-breakdown__sub-items {
    margin-bottom: $spacing-component-xs;
  }
}

.thds-item-breakdown__description {
  @include type-style(type-body);
}

/* Complex Component TODO
== Feature Detail =============================================================

structure:
    columns.thds-feature-detail
    div.thds-feature-detail__column
        img.thds-feature-detail__image
    div.thds-feature-detail__column
        h3.type-display-l.thds-feature-detail__name
        p.type-body-l.thds-feature-detail__summary
        ul.thds-feature-list [...]

*/
.thds-feature-detail__name {
  margin-top: 0;
}

.thds-feature-detail__image {
  display: block;
  max-width: 66.66%;
  margin: 0 auto;
}

/* Complex Component TODO
== Logo Grid ==================================================================

structure:
    div.thds-logo-grid
    div.thds-logo-grid__item
        img.thds-logo-grid__image
*/
.thds-logo-grid {
  display: flex !important;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: stretch;
}

.thds-logo-grid__item {
  flex-basis: 25%;
  display: flex;
  height: $spacing-component-3xl;
}

@include respond(below, oxy-m) {
  .thds-logo-grid__item {
    padding: $spacing-component-2xs;
    flex-basis: 50%;
  }
}

.thds-logo-grid__image {
  -webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */
  filter: grayscale(100%);
  transition: filter 0.3s;
}

.thds-logo-grid__item:hover .thds-logo-grid__image {
  -webkit-filter: none;
  filter: none;
  transition: filter 0.3s;
}

/* Component
-- Header ------------------------------------------------------------------
Override the oxygen default header

header.oxy-header.oxy-header-wrapper.oxy-sticky-header.oxy-overlay-header.thds-header       .oxy-sticker-header-active
    div.oxy-header-row.thds-header__row
    div.oxy-header-container
        div.oxy-header-left
    a.thds-header__image-link-wrapper
            img.ct-image.thds-image.thds-header__image
        div.oxy-header-center
        div.oxy-header-right
        nav.oxy-nav-menu.oxy-nav-menu-dropdowns.oxy-nav-menu-dropdown-arrow.thds-header__nav
            div.oxy-menu-toggle
            div.oxy-nav-menu-hamburger-wrap
                div.oxy-nav-menu-hamburger
                div.oxy-nav-menu-hamburger-line
                div.oxy-nav-menu-hamburger-line
                div.oxy-nav-menu-hamburger-line
            div.menu-footer-menu-container
            ul.oxy-nav-menu-list
                li.menu-item.menu-item-type-post_type.menu-item-object-page.menu-item-home.current-menu-item.page_item.current_page_item
                a
                li.menu-item.menu-item-type-post_type.menu-item-object-page.menu-item-has-children
                a
                ul.sub-menu
                    li.menu-item.menu-item-type-post_type.menu-item-object-page
                    a
            [...]
        [...]
*/
.thds-header {
  background-color: color(ui-4);
}

.thds-header .oxy-header-row {
  width: auto;
}

.thds-header__image {
  height: $layout-height-header;
}

.thds-header__nav {
  @include type-style(type-heading);
  color: color(primary);
  margin-top: 0;
  margin-bottom: 0;
}

.thds-header__nav .menu-item.current-menu-item > a,
.thds-header__nav .menu-item.current-menu-parent > a {
  color: color(secondary) !important; /* override #_nav_menu-19-6.oxy-nav-menu:not(.oxy-nav-menu-open) .sub-menu .menu-item a */
}

.thds-header__nav .menu-item a {
  line-height: $layout-height-header;
  padding: 0 25px;

  transition: all 0.3s;
  color: color(accent-1) !important; /* override #_nav_menu-19-6.oxy-nav-menu:not(.oxy-nav-menu-open) .sub-menu .menu-item a */
}

.thds-header__nav .menu-item a:hover {
  color: color(secondary) !important; /* override #_nav_menu-19-6.oxy-nav-menu:not(.oxy-nav-menu-open) .sub-menu .menu-item a */
  transition: all 0.3s;
}

.thds-header__nav .oxy-nav-menu-hamburger-line {
  background-color: color(primary);
}

.thds-header .oxy-nav-menu-open .sub-menu {
  background-color: color(ui-3);
}

.thds-header .oxy-nav-menu.oxy-nav-menu-open .oxy-nav-menu-hamburger-wrap {
  right: 41px;
  top: 2px;
}

.oxy-nav-menu-hamburger,
.thds-header .oxy-nav-menu-open .oxy-nav-menu-hamburger {
  transition: all 0.3s;
}

.oxy-nav-menu-prevent-overflow .thds-header .thds-header__image-link-wrapper {
  z-index: 2147483643;
}

.oxy-header-container {
  padding: 0;
}

/* Component
-- footer ------------------------------------------------------------------
Override the oxygen default header

footer.thds-footer
    div.thds-footer__row-wrapper
    div.thds-footer__row.thds-container
        h2.thds-footer__tagline
        rich-text.thds-footer__contact
    div.thds-footer__row-wrapper
    div.thds-footer__row.thds-container.thds-container_margin_none
        rich-text.thds-footer__copyright
*/

.thds-footer {
  margin-top: $spacing-layout-s;
}

.thds-footer__row-wrapper {
  overflow: hidden;
  background-color: color(ui-2);
}

.thds-footer__row-wrapper_bottom {
  background-color: color(ui-3);
}

.thds-footer__tagline {
  @include type-style(type-display-m);
}

.thds-footer__contact {
  @include type-style(type-body);
  margin-bottom: $spacing-component-m;
}

.thds-footer__copyright {
  @include type-style(type-body-s);
}
